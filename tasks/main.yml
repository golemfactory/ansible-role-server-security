- name: Configure strict unattended upgrades
  when: server_security_enable_strict_unattended_upgrades
  become: yes
  lineinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - regexp: '"\$\{distro_id\}:\$\{distro_codename\}-updates";'
      line: "\t\"${distro_id}:${distro_codename}-updates\";"
    # TODO configure mail delivery
    # Unattended-Upgrade::Mail "admin@golem.network";
    # Unattended-Upgrade::MailReport "only-on-error";
    - regexp: '^(//|)Unattended-Upgrade::Automatic-Reboot "'
      line: 'Unattended-Upgrade::Automatic-Reboot "true";'
    - regexp: '^(//|)Unattended-Upgrade::Automatic-Reboot-WithUsers "'
      line: 'Unattended-Upgrade::Automatic-Reboot-WithUsers "false";'

- name: ufw
  when: server_security_enable_firewall
  become: yes
  block:
    - name: ufw allow ssh
      ufw:
        rule: allow
        name: OpenSSH

    - name: ufw block everything else
      ufw:
        state: enabled

- name: journal
  when: server_security_disable_rsyslog
  become: yes
  block:
    - name: Create /var/log/journal
      file:
        path: /var/log/journal
        state: directory
      notify: Restart journald

    - name: Disable rsyslog
      systemd:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop:
        - syslog.socket
        - rsyslog.service

    - name: Find old rsyslog logs
      find:
        paths: /var/log
        patterns:
          - 'ufw.log*'
          - 'cloud-init.log*'
          - 'auth.log*'
          - 'syslog*'
          - 'kern.log*'
          - 'mail.log*'
      register: server_security_logs_to_delete

    - name: Delete old rsyslog logs
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ server_security_logs_to_delete['files'] }}"
